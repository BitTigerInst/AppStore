<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/tx
  	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<context:component-scan
		base-package="com.appstore.services, com.appstore.api.dao.impl, com.appstore.controller" />

	<http auto-config="true">
		<intercept-url pattern="/pages/*" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/pages/app/" access="ROLE_admin" />
		<intercept-url pattern="/app/*" access="ROLE_ANONYMOUS" />
		<intercept-url pattern="/**" access="IS_AUTHENTICATED_ANONYMOUSLY" />
		<form-login login-page="/login" default-target-url="/pages/index"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/welcome.jsp" />
		<!-- enable csrf protection -->
		<!-- csrf/ -->
	</http>

	<!-- authentication-manager> <authentication-provider> <user-service> <user 
		name="lee" password="lee" authorities="ROLE_USER" /> </user-service> </authentication-provider> 
		</authentication-manager -->

	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<password-encoder hash="bcrypt" />
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource"></beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
			</beans:props>
		</beans:property>
		<!-- **************************************************************
					mapping hibernate annotation classes 
		*****************************************************************-->
		<beans:property name="annotatedClasses">
			<beans:list>
	    		<beans:value>com.appstore.entity.User</beans:value>
	    		<beans:value>com.appstore.entity.App</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<tx:annotation-driven />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory">
		</beans:property>
	</beans:bean>

	<beans:bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver"></beans:property>
		<beans:property name="url"
			value="jdbc:mysql://127.0.0.1:3306/appstore"></beans:property>
		<beans:property name="username" value="root"></beans:property>
		<beans:property name="password" value="123456"></beans:property>
	</beans:bean>
	
	<!-- *******************************************************
			 Config about the beans defined for DAO 
	**********************************************************-->
	<beans:bean id="api" class="com.appstore.api.API" scope = "singleton">
		<beans:property name ="appDao">
		<beans:ref bean= "appDao"/>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="appDao" class="com.appstore.api.dao.impl.AppImpl" scope = "singleton">
		<beans:property name="sessionFactory">
			<beans:ref bean = "sessionFactory"/>
		</beans:property>
	</beans:bean>
	
	<!-- *******************************************************
	        config about the beans defined for Services 
	************************************************************-->
	<beans:bean id="webapi" class = "com.appstore.webapi.WebApi" scope = "singleton">
		<beans:property name="appService">
		<beans:ref bean="appService"></beans:ref>
		</beans:property>
	</beans:bean>
	
	<beans:bean id="appService" class="com.appstore.webapi.service.impl.AppServiceImpl" scope = "prototype">
		<beans:property name = "api">
			<beans:ref bean = "api"/>
		</beans:property>
	</beans:bean>
	
</beans:beans>